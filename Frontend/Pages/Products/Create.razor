@page "/Products/Create"
@using Shared.Model
@using System.ComponentModel.DataAnnotations
@inject HttpClient httpClient
@inject NavigationManager navigator

<h3>Add Products</h3>
<div class="row">
    <div class="col-4">
        <EditForm Model="@producto" OnValidSubmit="@SaveProducts">
            <DataAnnotationsValidator/>
            <ValidationSummary />

            <div class="form-group mb-3">
                <label>Name Product:</label>
                <InputText type="text" class="form-control shadow" id="name" @bind-value="@producto.ProductName" />
                <ValidationMessage For="@(() => producto.ProductName)" />
            </div>
            <div class="form-group mb-3">
                <label>Price:</label>
                <InputNumber type="text" class="form-control shadow" id="price" @bind-value="@producto.Price" />
                <ValidationMessage For="@(() => producto.Price)" />
            </div>
            <div class="form-group mb-3">
                <label>Category:</label>
                <InputText type="text" class="form-control shadow" id="category" @bind-value="@producto.Category" />
                <ValidationMessage For="@(() => producto.Category)" />
            </div>
            <div class="form-group mb-3">
                <label>Quantity:</label>
                <InputNumber type="text" class="form-control shadow" id="quantity" @bind-value="@producto.Quantity" />
                <ValidationMessage For="@(() => producto.Quantity)" />
            </div>
            <div class="form-group mb-3">
                <label>Location:</label>
                <InputText type="text" class="form-control shadow" id="location" @bind-value="@producto.Location" />
                <ValidationMessage For="@(() => producto.Location)" />
            </div>
            <div style="margin-top:30px;">
                <button type="submit" class="btn btn-primary" >Save Product</button>
                <button class="btn btn-primary">Return Main</button>
            </div>
        </EditForm>



        
    </div>
</div>



@code {

    public Product producto { get; set; } = new();

    public async Task SaveProducts()
    {
        using (httpClient = new())
        {
            var url = $"http://192.168.10.13:8080/api/products/AddProducts";
            httpClient.DefaultRequestHeaders.Accept.Clear();
            try
            {
                var response = await httpClient.PostAsJsonAsync<Product>(url, producto);
                if (response.IsSuccessStatusCode)
                {
                    var result = await response.Content.ReadAsStringAsync();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"error : {ex.Message}");
            }
            navigator.NavigateTo("../Products/Index");
        }

    }

    private void ProcesarFormulario()
    {
        Console.WriteLine("Formulario procesado");
    }






}
