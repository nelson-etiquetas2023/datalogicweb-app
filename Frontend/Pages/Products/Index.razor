@page "/Products/Index"
@using Shared.Model
@using System.Text.Json
@inject HttpClient httpClient
@inject NavigationManager navigator


<PageTitle>Products</PageTitle>
<h3>Products Page</h3>
<button class="btn btn-primary" style="margin-bottom:20px" @onclick="AddProducts">Add Products</button>

<table class="table table-bordered table-striped shadows">
    <thead>
        <tr>
            <th>
                It.
            </th>
            <th>
                Id.
            </th>
            <th>
                Product Name
            </th>    
            <th>
                Price
            </th>
            <th>
                Category
            </th>
            <th>Quantity</th>
            <th>Location</th>
            <th>Accion</th>
        </tr>
    </thead>
    <tbody>
        @{
            int fila = 0;
        }
        @foreach (var item in products!)
        {
            fila = fila + 1; 
            <tr>
                <td>@fila</td>
                <td>@item.Id</td>
                <td>@item.ProductName</td>
                <td>@item.Price</td>
                <td>@item.Category</td>
                <td>@item.Quantity</td>
                <td>@item.Location</td>
                <td><a href="#" class="icon-link me-3">Update</a><a href="#" class="icon-link">Delete</a></td>
            </tr>
        }

    </tbody>
</table>

@code {
    public static List<Product>? products = [];

    protected override async Task OnInitializedAsync()
    {
        products = await GetProducts();
    }

    public async Task<List<Product>> GetProducts()
    {
        try
        {
            var url = $"http://192.168.10.13:8080/api/products/getproducts";
            var response = await httpClient.GetAsync(url);
            if (response.IsSuccessStatusCode)
            {
                var respoString = await response.Content.ReadAsStringAsync();
                products = JsonSerializer.Deserialize<List<Product>>(respoString, new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
                return products!;
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine($"error : {ex.Message}");
        }
        return products!;
    }
    public void AddProducts()
    {
        navigator.NavigateTo("/Products/Create");
    }
}
